<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.example.toto.myapplication"
    android:versionCode="1"
    android:versionName="1.0" >

    <uses-sdk
        android:minSdkVersion="21"
        android:targetSdkVersion="26" />

    <!-- Apisense Manifest permissions -->
    <!-- If you need to communicate with the apisense server (most likely the case): -->
    <uses-permission android:name="android.permission.INTERNET" />

    <!-- If you intend to use the WifiSting: -->
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />

    <!-- If you intend to use the LocationSting: -->
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_COARSE_UPDATES" />

    <!-- If you intend to use the CallSting: -->
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    <uses-permission android:name="android.permission.WAKE_LOCK" /> <!-- Required by older versions of Google Play services to create IID tokens -->
    <uses-permission android:name="com.google.android.c2dm.permission.RECEIVE" />

    <permission
        android:name="com.example.toto.myapplication.permission.C2D_MESSAGE"
        android:protectionLevel="signature" />

    <uses-permission android:name="com.example.toto.myapplication.permission.C2D_MESSAGE" />

    <supports-screens
        android:anyDensity="true"
        android:largeScreens="true"
        android:normalScreens="true" />

    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />

    <uses-feature
        android:name="android.hardware.location.network"
        android:required="false" />
    <uses-feature
        android:name="android.hardware.location.gps"
        android:required="false" />
    <uses-feature
        android:name="android.hardware.telephony"
        android:required="false" />
    <uses-feature
        android:name="android.hardware.wifi"
        android:required="false" />

    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" /> <!-- If you intend to retrieve the foreground application with SystemSting: -->
    <!-- under API 22. -->
<!--     <uses-permission android:name="android.permission.GET_TASKS"/> -->
    <!-- from API 22. -->
    <!--
 Ne marche pas...
    <uses-permission android:name="android.permission.PACKAGE_USAGE_STATS" tools:ignore="ProtectedPermissions"/>
    -->
    <!-- Apisense Manifest permissions -->
    <application
        android:allowBackup="true"
        android:debuggable="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:testOnly="true"
        android:theme="@style/AppTheme" >

        <!-- Apisense Manifest permissions -->
        <!--
        applicationId is the package of your application,
        this variable is automatically set when building with gradle
        -->
        <provider
            android:name="android.support.v4.content.FileProvider"
            android:authorities="com.example.toto.myapplication.APSFileProvider"
            android:exported="false"
            android:grantUriPermissions="true" >
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/aps_media_path" />
        </provider>
        <!-- If you intend to monitor the current application on foreground with SystemSting: -->
        <!-- Declare an AccessibilityService to monitor the current foreground App -->
        <!--
        Inutile tant que le dossier res/xml/accessibility_service_config.xml n'existe pas
        <service
            android:label="@string/accessibility_service_name"
            android:name="io.apisense.sting.phone.system.WindowChangeDetectingService"
            android:permission="android.permission.BIND_ACCESSIBILITY_SERVICE">
            <intent-filter>
                <action android:name="android.accessibilityservice.AccessibilityService"/>
            </intent-filter>
            <meta-data
                android:name="android.accessibilityservice"
                android:resource="@xml/accessibility_service_config"/>
        </service>
        -->


        <!-- Apisense Manifest permissions -->

        <activity
            android:name="com.example.toto.myapplication.MainActivity"
            android:screenOrientation="portrait" >
            >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity
            android:name="io.apisense.sting.phone.system.UsageStatsActivity"
            android:screenOrientation="portrait" />

        <service
            android:name="io.apisense.sdk.core.script.service.ExecutionService"
            android:description="@string/aps_execution_service_description"
            android:exported="false"
            android:label="@string/aps_execution_service_name" />

        <activity
            android:name="io.apisense.sdk.core.sting.form.APSFormActivity"
            android:screenOrientation="portrait"
            android:theme="@style/FormTheme" />
        <!--
             FirebaseMessagingService performs security checks at runtime,
             no need for explicit permissions despite exported="true"
        -->
        <service
            android:name="com.google.firebase.messaging.FirebaseMessagingService"
            android:exported="true" >
            <intent-filter android:priority="-500" >
                <action android:name="com.google.firebase.MESSAGING_EVENT" />
            </intent-filter>
        </service>

        <receiver
            android:name="com.google.firebase.iid.FirebaseInstanceIdReceiver"
            android:exported="true"
            android:permission="com.google.android.c2dm.permission.SEND" >
            <intent-filter>
                <action android:name="com.google.android.c2dm.intent.RECEIVE" />

                <category android:name="com.example.toto.myapplication" />
            </intent-filter>
        </receiver>
        <!--
             FirebaseInstanceIdService performs security checks at runtime,
             no need for explicit permissions despite exported="true"
        -->
        <service
            android:name="com.google.firebase.iid.FirebaseInstanceIdService"
            android:exported="true" >
            <intent-filter android:priority="-500" >
                <action android:name="com.google.firebase.INSTANCE_ID_EVENT" />
            </intent-filter>
        </service>

        <provider
            android:name="com.google.firebase.provider.FirebaseInitProvider"
            android:authorities="com.example.toto.myapplication.firebaseinitprovider"
            android:exported="false"
            android:initOrder="100" />

        <meta-data
            android:name="com.google.android.gms.version"
            android:value="@integer/google_play_services_version" />
    </application>

</manifest>